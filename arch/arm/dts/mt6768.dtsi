#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>

/ {
  compatible = "mediatek,mt6768";
  interrupt-parent = <&gic>;
  #address-cells = <2>;
  #size-cells = <2>;

  /* /chosen has to be in the FDT */
  chosen {
    #address-cells = <2>;
    #size-cells = <2>;
    ranges;

    tick-timer = &gpt;
    /* /chosen/bootargs prop has to be in the FDT even if empty */
    bootargs = "";
  };

  memory@40000000 {
    /* The previous LK bootloader should fill this reg */
    reg = <0 0x40000000 0 0>;
    device_type = "memory";
  };

  psci {
    compatible = "arm,psci-1.0";
    method = "smc";
  };

  cpus {
    #address-cells = <1>;
    #size-cells = <0>;

    cpu0: cpu@0 {
      device_type = "cpu";
      compatible = "arm,cortex-a55";
      reg = <0x000>;
    };
    
    cpu1: cpu@1 {
      device_type = "cpu";
      compatible = "arm,cortex-a55";
      reg = <0x001>;
    };

    cpu2: cpu@2 {
      device_type = "cpu";
      compatible = "arm,cortex-a55";
      reg = <0x002>;
    };

    cpu3: cpu@3 {
      device_type = "cpu";
      compatible = "arm,cortex-a55";
      reg = <0x003>;
    };

    cpu4: cpu@100 {
      device_type = "cpu";
      compatible = "arm,cortex-a55";
      reg = <0x004>;
    };

    cpu5: cpu@101 {
      device_type = "cpu";
      compatible = "arm,cortex-a55";
      reg = <0x005>;
    };

    cpu6: cpu@102 {
      device_type = "cpu";
      compatible = "arm,cortex-a75";
      reg = <0x006>;
    };

    cpu7: cpu@103 {
      device_type = "cpu";
      compatible = "arm,cortex-a75";
      reg = <0x007>;
    };
  };

  clocks {
    system_clk: dummy13m {
      compatible = "fixed-clock";
      #clock-cells = <0>;
      clock-frequency = <13000000>;
      clock-output-names = "system-clk";
    };

    clk26m: clk26m {
      compatible = "fixed-clock";
      #clock-cells = <0>;
      clock-frequency = <26000000>;
      clock-output-names = "clk26m";
    };
  };

  soc {
    #address-cells = <2>;
    #size-cells = <2>;
    compatible = "simple-bus";
    ranges;

    wdt: watchdog@10007000 {
      compatible = "mediatek,mt6768-wdt";
      reg = <0 0x10007000 0 0x1000>;
      interrupts = <GIC_SPI 156 IRQ_TYPE_LEVEL_LOW>;
      timeout-sec = <15>;
      #reset-cells = <1>;
    };

    gpt: timer@10008000 {
      compatible = "mediatek,mt6768-timer";
      reg = <0 0x10008000 0 0x1000>;
      interrupts = <GIC_SPI 185 IRQ_TYPE_LEVEL_LOW>;
      clocks = <&system_clk>;
      clock-names = "system-clk";
      bootph-all;
    };

    gic: interrupt-controller@c000000 {
      compatible = "arm,gic-v3";
      #interrupt-cells = <3>;
      interrupt-parent = <&gic>;
      interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH>;
      interrupt-controller;
      reg = <0 0xc000000 0 0x40000>,	/* GICD */
            <0 0xc040000 0 0x200000>;	/* GICR */
    };

    uart0: serial@11002000 {
      compatible = "mediatek,mt6768-uart";
      reg = <0 0x11002000 0 0x1000>;
      interrupts = <GIC_SPI 112 IRQ_TYPE_LEVEL_LOW>;
      clocks = <&clk26m>;
      clock-names = "clk26m";
      status = "disabled";
    };

    uart1: serial@11003000 {
      compatible = "mediatek,mt6768-uart";
      reg = <0 0x11003000 0 0x1000>;
      interrupts = <GIC_SPI 113 IRQ_TYPE_LEVEL_LOW>;
      clocks = <&clk26m>;
      clock-names = "clk26m";
      status = "disabled";
    };
  };

  /*
   * Below nodes (+ chosen in the top of the file) are required
   * for the LK bootloader to merge with the minimal DTBO.
   * These get cleaned up in board_fdt_blob_setup().
   */
  reserved-memory {
    #address-cells = <2>;
    #size-cells = <2>;
    ranges;
  };

  scp@10500000 {
    compatible = "mediatek,scp";
  };

  dtbo-dummy {
    dtbo-dummy;
  };

  __symbols__ {
    gpio = "/dtbo-dummy";
    pio = "/dtbo-dummy";
    lcm_power_gpio = "/dtbo-dummy";
    mtkfb = "/dtbo-dummy";
    keypad = "/dtbo-dummy";
    odm = "/dtbo-dummy";
  };
};